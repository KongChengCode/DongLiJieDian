<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjpowernode.crm.workbench.mapper.ActivityMapper" >
  <resultMap id="BaseResultMap" type="com.bjpowernode.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 23 19:29:48 CST 2022.
    -->
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="owner" property="owner" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="CHAR" />
    <result column="end_date" property="endDate" jdbcType="CHAR" />
    <result column="cost" property="cost" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="edit_time" property="editTime" jdbcType="CHAR" />
    <result column="edit_by" property="editBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 23 19:29:48 CST 2022.
    -->
    id, owner, name, start_date, end_date, cost, description, create_time, create_by, 
    edit_time, edit_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 23 19:29:48 CST 2022.
    -->
    select 
    <include refid="Base_Column_List" />
    from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 23 19:29:48 CST 2022.
    -->
    delete from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </delete>

  <insert id="insertSelective" parameterType="com.bjpowernode.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 23 19:29:48 CST 2022.
    -->
    insert into tbl_activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="owner != null" >
        owner,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="editBy != null" >
        edit_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null" >
        #{editBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 23 19:29:48 CST 2022.
    -->
    update tbl_activity
    <set >
      <if test="owner != null" >
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null" >
        edit_by = #{editBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 23 19:29:48 CST 2022.
    -->
    update tbl_activity
    set owner = #{owner,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=CHAR},
      end_date = #{endDate,jdbcType=CHAR},
      cost = #{cost,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=CHAR},
      edit_by = #{editBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>


  <insert id="insertActivity" parameterType="com.bjpowernode.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 23 19:29:48 CST 2022.
    -->
    insert into tbl_activity (id, owner, name, start_date,
    end_date, cost, description,
    create_time, create_by)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR},
    #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
    #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR})
  </insert>



  <!--
  List<Activity> selectActivityByConditionForPage(Map<String,Object> map);
  -->
  <select id="selectActivityByConditionForPage" parameterType="map" resultMap="BaseResultMap">
    select a.id,u1.name as owner,a.name,a.start_date,a.end_date,a.cost,a.description,a.create_time,u2.name as creat_by,
           a.edit_time,u3.name as edit_by
    from tbl_activity a
        inner join tbl_user u1 on a.owner = u1.id
        inner join tbl_user u2 on a.create_by = u2.id
        left join tbl_user u3 on a.edit_by = u3.id
        <where>
            <if test="name != null and name != ''">
                and a.name like concat('%',#{name},'%')
            </if>
            <if test="owner != null and owner != ''">
                and u1.name like concat('%',#{owner},'%')
            </if>
            <if test="start_date != null and start_date != ''">
                and a.start_date >= #{start_date}
            </if>
            <if test="end_date != null and end_date != ''">
                and a.end_date &lt;= #{end_date}
            </if>
        </where>
        order by a.create_time desc
        limit #{beginNo},#{pageSize}
  </select>


  <!--
      int selectCountOfActivityByCondition(Map<String,Object> map);
  -->
  <select id="selectCountOfActivityByCondition" parameterType="map" resultType="int">
    select count(*)
    from tbl_activity a
    inner join tbl_user u1 on a.owner = u1.id
    inner join tbl_user u2 on a.create_by = u2.id
    left join tbl_user u3 on a.edit_by = u3.id
    <where>
      <if test="name != null and name != ''">
        and a.name like concat('%',#{name},'%')
      </if>
      <if test="owner != null and owner != ''">
        and u1.name like concat('%',#{owner},'%')
      </if>
      <if test="start_date != null and start_date != ''">
        and a.start_date >= #{start_date}
      </if>
      <if test="end_date != null and end_date != ''">
        and a.end_date &lt;= #{end_date}
      </if>
    </where>
  </select>


  <!--
  int deleteActivityByIds(String[] ids);
  -->
  <delete id="deleteActivityByIds" parameterType="string">
    delete from tbl_activity where id in
    <foreach collection="array" separator="," open="(" close=")" item="id">
        #{id}
    </foreach>
  </delete>


  <!--
  Activity selectActivityById(String id);
  -->
  <select id="selectActivityById" parameterType="string" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tbl_activity
    where id = #{id}
  </select>


  <!--
  int updateActivity(Activity activity);
  -->
  <update id="updateActivity" parameterType="activity">
    update tbl_activity
    set owner = #{owner},name = #{name},start_date = #{startDate},end_date = #{endDate},cost = #{cost},
        description = #{description},edit_time = #{editTime},edit_by = #{editBy}
    where id = #{id}
  </update>


  <!--
  List<Activity> selectAllActivity();
  -->
  <select id="selectAllActivities" resultMap="BaseResultMap">
    select t.id,u1.name as owner,t.name,t.start_date,t.end_date,t.cost,t.description,t.create_time,u2.name as create_by,
           t.edit_time,u3.name as edit_by
    from tbl_activity t
    inner join tbl_user u1 on t.owner = u1.id
    inner join tbl_user u2 on t.create_by = u2.id
    left join tbl_user u3 on t.edit_by = u3.id
    order by t.create_time desc
  </select>


  <!--
   List<Activity> selectActivityByIds(String[] split);
  -->
  <select id="selectActivityByIds" parameterType="string" resultMap="BaseResultMap">
    select  t.id,u1.name as owner,t.name,t.start_date,t.end_date,t.cost,t.description,t.create_time,u2.name as create_by,
            t.edit_time,u3.name as edit_by
    from tbl_activity t
           inner join tbl_user u1 on t.owner = u1.id
           inner join tbl_user u2 on t.create_by = u2.id
           left join tbl_user u3 on t.edit_by = u3.id
    where t.id in
    <foreach collection="array" separator="," open="(" close=")" item="id">
      #{id}
    </foreach>
    order by t.create_time desc
  </select>

  <!--
     int insertActivityByList(List<Activity> activityList);
  -->
  <insert id="insertActivityByList" parameterType="activity">
    insert into tbl_activity(id, owner, name, start_date, end_date, cost, description, create_time, create_by)
    values
    <foreach collection="list" separator="," item="activity">
      (#{activity.id},#{activity.owner},#{activity.name},#{activity.startDate},#{activity.endDate},#{activity.cost},
           #{activity.description},#{activity.createTime},#{activity.createBy})
    </foreach>

  </insert>

  <!--
  Activity selectActivityFormDetailById(String id);
  -->
  <select id="selectActivityForDetailById" parameterType="string" resultMap="BaseResultMap">
    select t.id,u1.name as owner,t.name,t.start_date,t.end_date,t.cost,t.description,t.create_time,u2.name as create_by,
           t.edit_time,u3.name as edit_by
    from tbl_activity t
        inner join tbl_user u1 on t.owner = u1.id
        inner join tbl_user u2 on t.create_by = u2.id
        left join tbl_user u3 on t.edit_by = u3.id
    where t.id = #{id}
  </select>

  <!--
  根据name模糊查询市场活动，并且把已经跟clueId关联过的市场活动排除
  List<Activity> selectActivityForDetailByNameClueId(Map<String,Object> map);
  -->
  <select id="selectActivityForDetailByNameClueId" parameterType="map" resultMap="BaseResultMap">
    select a.id,a.name,a.start_date,a.end_date,u.name as owner
    from tbl_activity a
        inner join tbl_user u on a.owner = u.id
    where a.name like concat('%',#{activityName},'%') and a.id not in (
        select activity_id
        from tbl_clue_activity_relation
        where clue_id = #{clueId}
      )

  </select>

  <!--
  根据ids查询市场活动的明细
  List<Activity> selectActivityForDetailByIds(String[] ids);
  -->
  <select id="selectActivityForDetailByIds" parameterType="string" resultMap="BaseResultMap">
    select a.id,a.name,a.start_date,a.end_date,u.name as owner
    from tbl_activity a
        inner join tbl_user u on a.owner = u.id
    where a.id in
    <foreach collection="array" separator="," item="id" open="(" close=")">
      #{id}
    </foreach>
  </select>

  <!--
  List<Activity> selectActivityForClueIds(String id);根据线索查找关系表再查找市场活动id
  -->
  <select id="selectActivityForClueId" parameterType="string" resultMap="BaseResultMap">
    select a.name,a.start_date,a.end_date,u.name as owner,a.id
    from tbl_activity a
        inner join tbl_user u on a.owner = u.id
    where a.id in (
        select activity_id
        from tbl_clue_activity_relation
        where clue_id = #{id}
      )
  </select>

  <!--
  List<Activity> selectActivityForConvertByNameClueId(Map<String,Object> map);根据name模糊查询市场活动，并且查询那些跟clueId关联过的市场活动
  -->
  <select id="selectActivityForConvertByNameClueId" parameterType="map" resultMap="BaseResultMap">
    select a.id,a.name,a.start_date,a.end_date,u.name as create_by
    from tbl_activity a
        inner join tbl_user u on a.owner = u.id
    where a.name like concat('%',#{activityName},'%') and a.id in (
        select activity_id
        from tbl_clue_activity_relation
        where clue_id = #{clueId}
      )
  </select>
</mapper>