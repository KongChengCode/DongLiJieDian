package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 15:50:12 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 15:50:12 CST 2022
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 15:50:12 CST 2022
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 15:50:12 CST 2022
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 15:50:12 CST 2022
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 15:50:12 CST 2022
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 创建线索
     * @param clue
     * @return
     */
    int insertClue(Clue clue);

    /**
     * 通过条件查询线索
     * @param map
     * @return
     */
    List<Clue> selectClueByCondition(Map<String,Object> map);

    /**
     * 通过条件查询符合条件的所有线索条数
     * @param map
     * @return
     */
    Integer selectCountOfClueByConditions(Map<String ,Object> map);

    /**
     * 显示特定线索的详细信息
     * @param id
     * @return
     */
    Clue selectDetailOfOneClueByCondition(String id);

    /**
     * 根据条件更新线索
     * @param clue
     * @return
     */
    int updateClueByCondition(Clue clue);

    /**
     * 删除线索
     * @param id
     * @return
     */
    int deleteClueById(String[] id);

    /**
     * 根据id查询线索信息,最复杂业务
     * @param id
     * @return
     */
    Clue selectClueById(String id);

    /**
     * 根据id删除该线索
     * @param id
     * @return
     */
    int deleteOneClueById(String id);
}